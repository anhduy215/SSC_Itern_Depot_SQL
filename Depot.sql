CREATE TABLE "FullStatus" (
    "FullStatusID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "Status" VARCHAR2(10) NOT NULL,
    CONSTRAINT "uq_status" UNIQUE ("Status")
);

CREATE TABLE "ContainerSize" (
    "SizeID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "SizeContainer" NUMBER NOT NULL,
    CONSTRAINT "chk_container_size_positive" CHECK ("SizeContainer" >= 0),
    CONSTRAINT "uq_container_size" UNIQUE ("SizeContainer")
);
CREATE TABLE "VehicleType" (
    "VehicleTypeID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "VehicleTypeName" VARCHAR2(50) NOT NULL,
    CONSTRAINT "uq_vehicle_type_name" UNIQUE ("VehicleTypeName")
);

CREATE TABLE "ContainerType" (
    "TypeID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "TypeName" VARCHAR2(20) NOT NULL,
    "TypeCode" CHAR(3) NOT NULL,
    "Description" VARCHAR2(255),
    CONSTRAINT "uq_container_type_name_code" UNIQUE ("TypeName", "TypeCode")
);

CREATE TABLE "Owner" (
    "OwnerID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL, 
    "OwnerName" VARCHAR2(100) NOT NULL, 
    "OwnerCode" VARCHAR2(5) NOT NULL, 
    "ContactInfo" VARCHAR2(100),  
    "CompanyName" VARCHAR2(100), 
    "ContainerCount" NUMBER DEFAULT 0,
    CONSTRAINT "uq_owner_name_code" UNIQUE ("OwnerName", "OwnerCode"),
    CONSTRAINT "chk_container_count" CHECK ("ContainerCount" >= 0)
);

CREATE TABLE "LocationStatus" (
    "LocationStatusID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "Status" VARCHAR2(10) NOT NULL
);

CREATE TABLE "LineOperator" (
    "LineOperatorID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,  
    "LineOperatorName" VARCHAR2(100) NOT NULL,
    "LineOperatorCode" VARCHAR2(5) NOT NULL,
    "ContactInfo" VARCHAR2(50),
    "CompanyName" VARCHAR2(100),
    "ActiveContracts" NUMBER DEFAULT 0
);

CREATE TABLE "Depot" (
    "DepotID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "DepotName" VARCHAR2(50) NOT NULL,
    "Location" VARCHAR2(100),
    "BlockCapacity" NUMBER,
    "Contact" VARCHAR2(50)
);

CREATE TABLE "UserAccount" (
    "UserID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "UserName" VARCHAR2(20) NOT NULL,
    "UserPassword" VARCHAR2(20) NOT NULL
);

CREATE TABLE "VirtualBlock" (
    "VirtualBlockID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "BlockName" VARCHAR2(10) NOT NULL,
    "Description" VARCHAR2(200),
    "DepotID" NUMBER NOT NULL,  
    CONSTRAINT "fk_depot"
        FOREIGN KEY ("DepotID") 
        REFERENCES "Depot" ("DepotID")
);

CREATE TABLE "Block" (
    "BlockID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "BayRange" NUMBER CHECK ("BayRange" BETWEEN 1 AND 5),
    "RowRange" NUMBER CHECK ("RowRange" BETWEEN 1 AND 10),
    "TierRange" NUMBER CHECK ("TierRange" BETWEEN 1 AND 5),
    "DepotID" NUMBER,
    CONSTRAINT "fk_depot2"
        FOREIGN KEY ("DepotID") 
        REFERENCES "Depot" ("DepotID")
);

CREATE TABLE "Container" (
    "ContainerNumber" VARCHAR2(20) PRIMARY KEY NOT NULL,
    "ISO" VARCHAR2(20),
    "MaximumWeight" NUMBER,
    "TareWeight" NUMBER,
    "DateOfManufacture" DATE,
    "SizeID" NUMBER,
    "ContainerStatus" VARCHAR2(100),
    "OwnerID" NUMBER,
    "ContainerTypeID" NUMBER,
    "VirtualBlockID" NUMBER,
    "LocationStatusID" NUMBER,
    "LineOperatorID" NUMBER,
    "FullStatusID" NUMBER,
    CONSTRAINT "fk_size"
        FOREIGN KEY ("SizeID") 
        REFERENCES "ContainerSize" ("SizeID"),
    CONSTRAINT "fk_owner"
        FOREIGN KEY ("OwnerID") 
        REFERENCES "Owner" ("OwnerID"),
    CONSTRAINT "fk_container_type"
        FOREIGN KEY ("ContainerTypeID") 
        REFERENCES "ContainerType" ("TypeID"),
    CONSTRAINT "fk_virtual_block"
        FOREIGN KEY ("VirtualBlockID") 
        REFERENCES "VirtualBlock" ("VirtualBlockID"),
    CONSTRAINT "fk_location_status"
        FOREIGN KEY ("LocationStatusID") 
        REFERENCES "LocationStatus" ("LocationStatusID"),
    CONSTRAINT "fk_line_operator2"
        FOREIGN KEY ("LineOperatorID") 
        REFERENCES "LineOperator" ("LineOperatorID"),
    CONSTRAINT "fk_full_status"
        FOREIGN KEY ("FullStatusID") 
        REFERENCES "FullStatus" ("FullStatusID"),
    CONSTRAINT "chk_virtual_block_null" CHECK ("LocationStatusID" = 2 OR "VirtualBlockID" IS NULL)
);

CREATE TABLE "PositionContainer" (
    "PositionID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "Status" VARCHAR2(50),
    "Bay" NUMBER,
    "RowNumber" NUMBER,
    "TierNumber" NUMBER,
    "ContainerNumber" VARCHAR2(20),
    "BlockID" NUMBER,
    CONSTRAINT "fk_container2"
        FOREIGN KEY ("ContainerNumber") 
        REFERENCES "Container" ("ContainerNumber"),
    CONSTRAINT "fk_block"
        FOREIGN KEY ("BlockID") 
        REFERENCES "Block" ("BlockID")
);

CREATE TABLE "Vehicle" (
    "LicensePlate" VARCHAR2(15)PRIMARY KEY NOT NULL,
    "DriverName" VARCHAR2(30),
    "DriverContact" VARCHAR2(15),
    "CompanyName" VARCHAR2(50),
    "Status" VARCHAR2(30) NOT NULL,
    "VehicleTypeID" NUMBER NOT NULL,
    CONSTRAINT "fk_vehicle_type"
        FOREIGN KEY ("VehicleTypeID")
        REFERENCES "VehicleType" ("VehicleTypeID")
);
CREATE TABLE "Approvements" ( --s?a l?i thành approvement
    "ApprovementsID" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "CreateDate" DATE,
    "Status" VARCHAR2(10),
    "UserID" NUMBER,
    CONSTRAINT "fk_user"
        FOREIGN KEY ("UserID") 
        REFERENCES "UserAccount" ("UserID")
);

CREATE TABLE "Eir" (--s?a l?i thành eir t? command
    "EirNumber" NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    "TaxCode" VARCHAR2(20),
    "CustomerName" VARCHAR2(100),
    "Deadline" DATE,
    "CreateDate" DATE,
    "EirType" VARCHAR2(6) NOT NULL,
    "LineOperatorID" NUMBER NOT NULL,
    "ContainerNumber" VARCHAR2(20)NOT NULL,
    "LicensePlate" VARCHAR2(15) NOT NULL,
    "ApprovementsID" NUMBER,
    CONSTRAINT "fk_cont"
        FOREIGN KEY ("ContainerNumber") 
        REFERENCES "Container" ("ContainerNumber"),
    CONSTRAINT "fk_approve"
        FOREIGN KEY ("ApprovementsID") 
        REFERENCES "Approvements" ("ApprovementsID"),
    CONSTRAINT "fk_truck"
        FOREIGN KEY ("LicensePlate") 
        REFERENCES "Vehicle" ("LicensePlate"),
    CONSTRAINT "fk_line_operator"
        FOREIGN KEY ("LineOperatorID") 
        REFERENCES "LineOperator" ("LineOperatorID")
);
--trigger--------------------------------------------------------------------------
--trigger check bay row tier range
CREATE OR REPLACE TRIGGER "trg_check_position_range"
BEFORE INSERT OR UPDATE ON "PositionContainer"
FOR EACH ROW
DECLARE
    v_bay_range NUMBER;
    v_row_range NUMBER;
    v_tier_range NUMBER;
BEGIN
    BEGIN
        SELECT "BayRange", "RowRange", "TierRange"
        INTO v_bay_range, v_row_range, v_tier_range
        FROM "Block"
        WHERE "BlockID" = :NEW."BlockID";

    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20004, 'BlockID ' || :NEW."BlockID" || ' does not exist in Block.');
        WHEN TOO_MANY_ROWS THEN
            RAISE_APPLICATION_ERROR(-20005, 'Multiple rows found for BlockID ' || :NEW."BlockID" || '.');
    END;

    IF :NEW."Bay" > v_bay_range THEN
        RAISE_APPLICATION_ERROR(-20001, 'Bay value exceeds the maximum range for BlockID ' || :NEW."BlockID");
    END IF;

    IF :NEW."RowNumber" > v_row_range THEN
        RAISE_APPLICATION_ERROR(-20002, 'Row value exceeds the maximum range for BlockID ' || :NEW."BlockID");
    END IF;

    IF :NEW."TierNumber" > v_tier_range THEN
        RAISE_APPLICATION_ERROR(-20003, 'Tier value exceeds the maximum range for BlockID ' || :NEW."BlockID");
    END IF;
END;
/

--check bay chan le xep cont 40 20
CREATE OR REPLACE TRIGGER "check_container_position"
BEFORE INSERT OR UPDATE ON "PositionContainer"
FOR EACH ROW
DECLARE
    v_container_size NUMBER; -- Kích th??c container (20 ho?c 40 feet)
BEGIN
    -- Truy v?n kích th??c container t? b?ng ContainerSize
    BEGIN
        SELECT cs."SizeContainer"
        INTO v_container_size
        FROM "Container" c
        JOIN "ContainerSize" cs ON c."SizeID" = cs."SizeID"
        WHERE c."ContainerNumber" = :NEW."ContainerNumber";
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            RAISE_APPLICATION_ERROR(-20004, 'Container does not exist.');
    END;

    -- Ki?m tra n?u kích th??c container là 20 feet và bay là s? ch?n
    IF v_container_size = 20 THEN
        IF MOD(:NEW."Bay", 2) = 0 THEN
            RAISE_APPLICATION_ERROR(-20001, '20 feet containers cannot be placed in even-numbered bays.');
        END IF;
    -- Ki?m tra n?u kích th??c container là 40 feet và bay là s? l?
    ELSIF v_container_size = 40 THEN
        IF MOD(:NEW."Bay", 2) <> 0 THEN
            RAISE_APPLICATION_ERROR(-20002, '40 feet containers cannot be placed in odd-numbered bays.');
        END IF;
    ELSE
        RAISE_APPLICATION_ERROR(-20003, 'Invalid container size.');
    END IF;
END;
/

--trigger ki?m tra không ???c t?n t?i 1 container v?i 2 v? trí active
--CREATE OR REPLACE TRIGGER "trg_check_active_status"
--BEFORE INSERT OR UPDATE ON "PositionContainer"
--FOR EACH ROW
--DECLARE
--    v_count NUMBER;
--BEGIN
--    -- Ki?m tra s? l??ng ghi v?i cùng ContainerNumber và Status = 'active'
--    SELECT COUNT(*)
--    INTO v_count
--    FROM "PositionContainer"
--    WHERE "ContainerNumber" = :NEW."ContainerNumber"
--      AND "Status" = 'active'
--      AND ("PositionID" <> :NEW."PositionID" OR :NEW."PositionID" IS NULL);
--
--    -- N?u ?ã có b?n ghi active, không cho phép thêm b?n ghi m?i v?i Status = 'active'
--    IF v_count > 0 AND :NEW."Status" = 'active' THEN
--        RAISE_APPLICATION_ERROR(-20001, 'ContainerNumber cannot have multiple records with status ''active''.');
--    END IF;
--END;
--/

--trigger check khong the ton tai 2 cont cung 1 cho
--CREATE OR REPLACE TRIGGER "check_active_container_position"
--BEFORE INSERT OR UPDATE ON "PositionContainer"
--FOR EACH ROW
--DECLARE
--    v_count NUMBER;
--BEGIN
--    SELECT COUNT(*)
--    INTO v_count
--    FROM "PositionContainer"
--    WHERE "Bay" = :NEW."Bay"
--      AND "RowNumber" = :NEW."RowNumber"
--      AND "TierNumber" = :NEW."TierNumber"
--      AND "BlockID" = :NEW."BlockID"
--      AND "Status" = 'active'
--      AND "PositionID" != :NEW."PositionID";
--
--    IF v_count > 0 AND :NEW."Status" = 'active' THEN
--        RAISE_APPLICATION_ERROR(-20001, 'This position already has an active container.');
--    END IF;
--END;
--/

--check location status vs position status
--CREATE OR REPLACE TRIGGER trg_check_container_position_active
--BEFORE INSERT OR UPDATE ON "PositionContainer"
--FOR EACH ROW
--DECLARE
--    v_location_status VARCHAR2(10);
--BEGIN
--    -- L?y LocationStatus c?a Container t??ng ?ng
--    SELECT ls."Status"
--    INTO v_location_status
--    FROM "Container" c
--    JOIN "LocationStatus" ls ON c."LocationStatusID" = ls."LocationStatusID"
--    WHERE c."ContainerNumber" = :NEW."ContainerNumber";
--
--    -- Ki?m tra n?u PositionContainer.Status là 'Active' thì LocationStatus ph?i là 'InBlock'
--    IF :NEW."Status" = 'active' AND v_location_status != 'InBlock' THEN
--        RAISE_APPLICATION_ERROR(-20001, 'Container location status must be "InBlock" for active position.');
--    END IF;
--END;
--/

--insert-----------------------------------------------------------------------------------------------------
-- FullStatus
INSERT INTO "FullStatus" ("Status") VALUES ('Full');
INSERT INTO "FullStatus" ("Status") VALUES ('Empty');

-- ContainerSize
INSERT INTO "ContainerSize" ("SizeContainer") VALUES (20);
INSERT INTO "ContainerSize" ("SizeContainer") VALUES (40);
INSERT INTO "ContainerSize" ("SizeContainer") VALUES (45);

-- VehicleType
INSERT INTO "VehicleType" ("VehicleTypeName") VALUES ('Container Truck');
INSERT INTO "VehicleType" ("VehicleTypeName") VALUES ('Forklift');
INSERT INTO "VehicleType" ("VehicleTypeName") VALUES ('Cranes');
INSERT INTO "VehicleType" ("VehicleTypeName") VALUES ('Reefer Truck');
INSERT INTO "VehicleType" ("VehicleTypeName") VALUES ('Flatbed Truck');

-- ContainerType
INSERT INTO "ContainerType" ("TypeName", "TypeCode", "Description") VALUES ('Dry Container', 'D', 'Standard dry container for general cargo.');
INSERT INTO "ContainerType" ("TypeName", "TypeCode", "Description") VALUES ('Reefer Container', 'R', 'Refrigerated container for perishable goods.');
INSERT INTO "ContainerType" ("TypeName", "TypeCode", "Description") VALUES ('Open Top Container', 'O', 'Container with an open top for oversized cargo.');
INSERT INTO "ContainerType" ("TypeName", "TypeCode", "Description") VALUES ('Flat Rack Container', 'F', 'Flat container with collapsible sides for heavy or oversized cargo.');
INSERT INTO "ContainerType" ("TypeName", "TypeCode", "Description") VALUES ('High Cube Container', 'H', 'Taller than standard dry container, used for oversized cargo.');
INSERT INTO "ContainerType" ("TypeName", "TypeCode", "Description") VALUES ('Tank Container', 'T', 'Specialized container for transporting liquids.');

-- Owner
INSERT INTO "Owner" ("OwnerName", "OwnerCode", "ContactInfo", "CompanyName", "ContainerCount") 
VALUES ('CMA CGM', 'CMA', '0212345678', 'CMA CGM S.A.', 10);
INSERT INTO "Owner" ("OwnerName", "OwnerCode", "ContactInfo", "CompanyName", "ContainerCount") 
VALUES ('Mediterranean Shipping Company', 'MSC', '0212345679', 'Mediterranean Shipping Company S.A.', 8);
INSERT INTO "Owner" ("OwnerName", "OwnerCode", "ContactInfo", "CompanyName", "ContainerCount") 
VALUES ('Hyundai Merchant Marine', 'HMM', '0212345680', 'Hyundai Merchant Marine Co., Ltd.', 5);

-- LocationStatus
INSERT INTO "LocationStatus" ("Status") VALUES ('InBlock');
INSERT INTO "LocationStatus" ("Status") VALUES ('Movement');
INSERT INTO "LocationStatus" ("Status") VALUES ('Complete');

-- LineOperator
INSERT INTO "LineOperator" ("LineOperatorName", "LineOperatorCode", "ContactInfo", "CompanyName", "ActiveContracts")
VALUES ('CMA CGM', 'CMA', 'contact@cma-cgm.com', 'CMA CGM Group', 15);
INSERT INTO "LineOperator" ("LineOperatorName", "LineOperatorCode", "ContactInfo", "CompanyName", "ActiveContracts")
VALUES ('Mediterranean Shipping Company', 'MSC', 'info@msc.com', 'Mediterranean Shipping Company', 20);
INSERT INTO "LineOperator" ("LineOperatorName", "LineOperatorCode", "ContactInfo", "CompanyName", "ActiveContracts")
VALUES ('Hyundai Merchant Marine', 'HMM', 'support@hmm21.com', 'Hyundai Merchant Marine', 10);
INSERT INTO "LineOperator" ("LineOperatorName", "LineOperatorCode", "ContactInfo", "CompanyName", "ActiveContracts")
VALUES ('Evergreen Marine', 'EGL', 'service@evergreen-marine.com', 'Evergreen Marine Corp', 12);
INSERT INTO "LineOperator" ("LineOperatorName", "LineOperatorCode", "ContactInfo", "CompanyName", "ActiveContracts")
VALUES ('ONE Line', 'ONE', 'customer.service@one-line.com', 'Ocean Network Express', 8);

-- Depot
INSERT INTO "Depot" ("DepotName", "Location", "BlockCapacity", "Contact")
VALUES ('Depot 1', 'Location 1', 10, 'contact1@example.com');

-- UserAccount
INSERT INTO "UserAccount" ("UserName", "UserPassword")
VALUES ('admin', '123');

-- VirtualBlock
INSERT INTO "VirtualBlock" ("BlockName", "Description", "DepotID")
VALUES ('BlockA', 'Virtual block for storage of large containers.', 1);

-- Block
INSERT INTO "Block" ("BayRange", "RowRange", "TierRange", "DepotID") VALUES (3, 5, 4, 1);
INSERT INTO "Block" ("BayRange", "RowRange", "TierRange", "DepotID") VALUES (4, 6, 5, 1);

-- Vehicle
INSERT INTO "Vehicle" ("LicensePlate", "DriverName", "DriverContact", "CompanyName", "Status", "VehicleTypeID")
VALUES ('29A-12345', 'Nguyen Van A', '0987654321', 'Cong Ty A', 'Active', 1);
INSERT INTO "Vehicle" ("LicensePlate", "DriverName", "DriverContact", "CompanyName", "Status", "VehicleTypeID")
VALUES ('30B-67890', 'Tran Van B', '0912345678', 'Cong Ty B', 'Inactive', 1);
INSERT INTO "Vehicle" ("LicensePlate", "DriverName", "DriverContact", "CompanyName", "Status", "VehicleTypeID")
VALUES ('79C-11111', 'Le Thi C', '0901234567', 'Cong Ty C', 'Active', 1);
INSERT INTO "Vehicle" ("LicensePlate", "DriverName", "DriverContact", "CompanyName", "Status", "VehicleTypeID")
VALUES ('65D-54321', 'Pham Van D', '0923456789', 'Cong Ty D', 'Active', 1);
INSERT INTO "Vehicle" ("LicensePlate", "DriverName", "DriverContact", "CompanyName", "Status", "VehicleTypeID")
VALUES ('51E-99999', 'Vo Van E', '0932123456', 'Cong Ty E', 'Inactive', 1);
INSERT INTO "Vehicle" ("LicensePlate", "DriverName", "DriverContact", "CompanyName", "Status", "VehicleTypeID")
VALUES ('35F-88888', 'Nguyen Van F', '0945678901', 'Cong Ty F', 'Active', 1);
INSERT INTO "Vehicle" ("LicensePlate", "DriverName", "DriverContact", "CompanyName", "Status", "VehicleTypeID")
VALUES ('40G-77777', 'Tran Van G', '0956789012', 'Cong Ty G', 'Active', 1);

--Approvements
INSERT INTO "Approvements" ("CreateDate", "Status", "UserID")
VALUES (SYSDATE, 'Approved', 1);
INSERT INTO "Approvements" ("CreateDate", "Status", "UserID")
VALUES (SYSDATE, 'Rejected', 1);
INSERT INTO "Approvements" ("CreateDate", "Status", "UserID")
VALUES (SYSDATE, 'Approved', 1);
INSERT INTO "Approvements" ("CreateDate", "Status", "UserID")
VALUES (SYSDATE, 'Rejected', 1);
INSERT INTO "Approvements" ("CreateDate", "Status", "UserID")
VALUES (SYSDATE, 'Approved', 1);

-- Container
INSERT INTO "Container" ("ContainerNumber", "ISO", "MaximumWeight", "TareWeight", "DateOfManufacture", "SizeID", "ContainerStatus", "OwnerID", "ContainerTypeID", "VirtualBlockID", "LocationStatusID", "LineOperatorID", "FullStatusID")
VALUES ('ABCD1234567', 'ISO1234', 30000, 2500, TO_DATE('2020-01-01', 'YYYY-MM-DD'), 1, 'th?ng nóc', 1, 1, NULL, 1, 1, 1);
INSERT INTO "Container" ("ContainerNumber", "ISO", "MaximumWeight", "TareWeight", "DateOfManufacture", "SizeID", "ContainerStatus", "OwnerID", "ContainerTypeID", "VirtualBlockID", "LocationStatusID", "LineOperatorID", "FullStatusID")
VALUES ('EFGH2345678', 'ISO5678', 32000, 2800, TO_DATE('2021-05-01', 'YYYY-MM-DD'), 2, 'tr?y x??c', 1, 1, NULL, 1, 1, 1);
INSERT INTO "Container" ("ContainerNumber", "ISO", "MaximumWeight", "TareWeight", "DateOfManufacture", "SizeID", "ContainerStatus", "OwnerID", "ContainerTypeID", "VirtualBlockID", "LocationStatusID", "LineOperatorID", "FullStatusID")
VALUES ('IJKL3456789', 'ISO9101', 35000, 3000, TO_DATE('2022-08-01', 'YYYY-MM-DD'), 1, 'nát bét', 1, 1, NULL, 1, 1, 1);
INSERT INTO "Container" ("ContainerNumber", "ISO", "MaximumWeight", "TareWeight", "DateOfManufacture", "SizeID", "ContainerStatus", "OwnerID", "ContainerTypeID", "VirtualBlockID", "LocationStatusID", "LineOperatorID", "FullStatusID")
VALUES ('MNOP4567890', 'ISO2345', 28000, 2500, TO_DATE('2023-10-01', 'YYYY-MM-DD'), 2, 'd?p c?a', 1, 1, NULL, 1, 1, 1);
INSERT INTO "Container" ("ContainerNumber", "ISO", "MaximumWeight", "TareWeight", "DateOfManufacture", "SizeID", "ContainerStatus", "OwnerID", "ContainerTypeID", "VirtualBlockID", "LocationStatusID", "LineOperatorID", "FullStatusID")
VALUES ('QRST5678901', 'ISO6789', 32000, 2900, TO_DATE('2023-09-15', 'YYYY-MM-DD'), 2, 'rách n?n', 1, 1, NULL, 1, 1, 1);
INSERT INTO "Container" ("ContainerNumber", "ISO", "MaximumWeight", "TareWeight", "DateOfManufacture", "SizeID", "ContainerStatus", "OwnerID", "ContainerTypeID", "VirtualBlockID", "LocationStatusID", "LineOperatorID", "FullStatusID")
VALUES ('UVWX6789012', 'ISO3456', 31000, 2700, TO_DATE('2023-08-20', 'YYYY-MM-DD'), 1, 'v? c?a', 1, 1, NULL, 1, 1, 1);
INSERT INTO "Container" ("ContainerNumber", "ISO", "MaximumWeight", "TareWeight", "DateOfManufacture", "SizeID", "ContainerStatus", "OwnerID", "ContainerTypeID", "VirtualBlockID", "LocationStatusID", "LineOperatorID", "FullStatusID")
VALUES ('YZAB7890123', 'ISO7890', 29000, 2600, TO_DATE('2023-07-10', 'YYYY-MM-DD'), 1, 'móp hông', 1, 1, NULL, 1, 1, 1);

--Position
-- Container 1 (ContainerNumber = 'ABCD1234567') ? BlockID = 1
INSERT INTO "PositionContainer" ("Status", "Bay", "RowNumber", "TierNumber", "ContainerNumber", "BlockID")
VALUES ('active', 1, 1, 1, 'ABCD1234567', 1);
-- Container 2 (ContainerNumber = 'EFGH2345678') ? BlockID = 2
INSERT INTO "PositionContainer" ("Status", "Bay", "RowNumber", "TierNumber", "ContainerNumber", "BlockID")
VALUES ('active', 2, 2, 1, 'EFGH2345678', 2);
-- Container 3 (ContainerNumber = 'IJKL3456789') ? BlockID = 1
INSERT INTO "PositionContainer" ("Status", "Bay", "RowNumber", "TierNumber", "ContainerNumber", "BlockID")
VALUES ('active', 3, 1, 3, 'IJKL3456789', 1);
-- Container 4 (ContainerNumber = 'MNOP4567890') ? BlockID = 2
INSERT INTO "PositionContainer" ("Status", "Bay", "RowNumber", "TierNumber", "ContainerNumber", "BlockID")
VALUES ('active', 2, 1, 2, 'MNOP4567890', 2);
-- Container 5 (ContainerNumber = 'QRST5678901') ? BlockID = 1
INSERT INTO "PositionContainer" ("Status", "Bay", "RowNumber", "TierNumber", "ContainerNumber", "BlockID")
VALUES ('active', 2, 1, 1, 'QRST5678901', 1);
-- Container 6 (ContainerNumber = 'UVWX6789012') ? BlockID = 2
INSERT INTO "PositionContainer" ("Status", "Bay", "RowNumber", "TierNumber", "ContainerNumber", "BlockID")
VALUES ('active', 1, 2, 1, 'UVWX6789012', 2);
-- Container 7 (ContainerNumber = 'YZAB7890123') ? BlockID = 1
INSERT INTO "PositionContainer" ("Status", "Bay", "RowNumber", "TierNumber", "ContainerNumber", "BlockID")
VALUES ('active', 3, 1, 2, 'YZAB7890123', 1);

--Eir(containerNumber)
INSERT INTO "Eir" ("TaxCode", "CustomerName", "Deadline", "CreateDate", "EirType", "LineOperatorID", "ContainerNumber", "LicensePlate", "ApprovementsID")
VALUES ('123456789', 'Cong Ty A', TO_DATE('2024-10-15', 'YYYY-MM-DD'), SYSDATE, 'Import', 1, 'ABCD1234567', '29A-12345', 1);
INSERT INTO "Eir" ("TaxCode", "CustomerName", "Deadline", "CreateDate", "EirType", "LineOperatorID", "ContainerNumber", "LicensePlate", "ApprovementsID")
VALUES ('987654321', 'Cong Ty B', TO_DATE('2024-10-20', 'YYYY-MM-DD'), SYSDATE, 'Export', 2, 'EFGH2345678', '30B-67890', 2);
INSERT INTO "Eir" ("TaxCode", "CustomerName", "Deadline", "CreateDate", "EirType", "LineOperatorID", "ContainerNumber", "LicensePlate", "ApprovementsID")
VALUES ('567890123', 'Cong Ty C', TO_DATE('2024-11-01', 'YYYY-MM-DD'), SYSDATE, 'Import', 3, 'IJKL3456789', '79C-11111', 1);
INSERT INTO "Eir" ("TaxCode", "CustomerName", "Deadline", "CreateDate", "EirType", "LineOperatorID", "ContainerNumber", "LicensePlate", "ApprovementsID")
VALUES ('246801357', 'Cong Ty D', TO_DATE('2024-10-25', 'YYYY-MM-DD'), SYSDATE, 'Export', 1, 'MNOP4567890', '65D-54321', 1);
INSERT INTO "Eir" ("TaxCode", "CustomerName", "Deadline", "CreateDate", "EirType", "LineOperatorID", "ContainerNumber", "LicensePlate", "ApprovementsID")
VALUES ('135792468', 'Cong Ty E', TO_DATE('2024-10-30', 'YYYY-MM-DD'), SYSDATE, 'Import', 2, 'QRST5678901', '51E-99999', 2);
INSERT INTO "Eir" ("TaxCode", "CustomerName", "Deadline", "CreateDate", "EirType", "LineOperatorID", "ContainerNumber", "LicensePlate", "ApprovementsID")
VALUES ('102938475', 'Cong Ty F', TO_DATE('2024-10-22', 'YYYY-MM-DD'), SYSDATE, 'Import', 2, 'UVWX6789012', '35F-88888', 2);
INSERT INTO "Eir" ("TaxCode", "CustomerName", "Deadline", "CreateDate", "EirType", "LineOperatorID", "ContainerNumber", "LicensePlate", "ApprovementsID")
VALUES ('564738291', 'Cong Ty G', TO_DATE('2024-11-05', 'YYYY-MM-DD'), SYSDATE, 'Export', 3, 'YZAB7890123', '40G-77777', 1);

--drop-----------------------------------------------------------------------------
--DROP TABLE "Eir";
--DROP TABLE "PositionContainer";
--DROP TABLE "Approvements";
--DROP TABLE "Block";
--DROP TABLE "UserAccount";
--DROP TABLE "Vehicle";
--DROP TABLE "VehicleType";
--DROP TABLE "Container";
--DROP TABLE "VirtualBlock";
--DROP TABLE "Depot";
--DROP TABLE "LineOperator";
--DROP TABLE "LocationStatus";
--DROP TABLE "Owner";
--DROP TABLE "ContainerType";
--DROP TABLE "ContainerSize";
--DROP TABLE "FullStatus";